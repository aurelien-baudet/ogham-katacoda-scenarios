<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>your-group</groupId>
  <artifactId>your-artifact</artifactId>
  <version>0.0.1-SNAPSHOT</version>

  <properties>
      <!-- configure Java version for Maven -->
      <maven.compiler.source>1.8</maven.compiler.source>
      <maven.compiler.target>1.8</maven.compiler.target>
  </properties>

  <dependencies>
      <!-- Include ogham dependency here -->
  </dependencies>

  <!-- 
      This part is only needed for the sample in order to package a JAR that contains
      all dependencies. 
      
      This is done for Katacoda and it is NOT required by Ogham at all.
      
      Fat JAR (JAR containing all dependencies) is used in this case to make the command line is easier to run:

      $ java -cp your-artifact-0.0.1-SNAPSHOT.jar

    Instead of:
          
      $ java -cp your-artifact-0.0.1-SNAPSHOT.jar \
                .m2/repository/<path-to-dependency-1> \
                .m2/repository/<path-to-dependency-2> \
                .m2/repository/<path-to-dependency-3> \
                ...
                .m2/repository/<path-to-dependency-n> \
  -->
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>